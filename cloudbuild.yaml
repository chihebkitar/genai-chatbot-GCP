# cloudbuild.yaml
# A complete CI/CD pipeline using Google Cloud Build

# Substitutions (optional) let you configure variables at runtime
substitutions:
  _DEPLOYMENT_BRANCH: "main"

options:
  logging: CLOUD_LOGGING_ONLY


steps:

  ### (Optional) 1. Terraform Validate
  # If your code includes the Terraform infra under 'infra/' and
  # you want to check it quickly. This won't do an apply, just a validate/plan.
  - name: 'hashicorp/terraform:light'
    id: 'TF Validate'
    entrypoint: 'sh'
    args:
     - '-c'
     - |
      cd infra
      terraform init -input=false
      terraform validate
      # We only want to validate, so remove terraform plan OR handle its exit code
      # e.g. "terraform plan -input=false || true" if you want to ignore

  ### 2. Python Unit Tests for docker-bot
  - name: 'python:3.10'
    id: 'Unit Tests - docker-bot'
    entrypoint: 'bash'
    args:
     - '-c'
     - |
      pip install pytest
      cd docker-bot
      if ls test_*.py tests/*.py >/dev/null 2>&1; then
        pytest --maxfail=1 --disable-warnings -q
      else
        echo "‚ö†Ô∏è No docker-bot tests found ‚Äî skipping"
      fi

  - name: 'python:3.10'
    id: 'Unit Tests - yt-whisper'
    entrypoint: 'bash'
    args:
     - '-c'
     - |
      pip install pytest
      cd yt-whisper
      if ls test_*.py tests/*.py >/dev/null 2>&1; then
        pytest --maxfail=1 --disable-warnings -q
      else
        echo "‚ö†Ô∏è No yt-whisper tests found ‚Äî skipping"
      fi


  ### 4. SAST Scanning (Bandit or Semgrep)
  - name: 'python:3.10'
    id: 'SAST - bandit'
    entrypoint: 'bash'
    args:
     - '-c'
     - |
      pip install bandit
      echo "üîç Running Bandit SAST scan (low‚Äëseverity issues won‚Äôt fail build)‚Ä¶"
      bandit -r docker-bot/ yt-whisper/ --exit-zero
      echo "‚úÖ Bandit scan complete"

    # If you prefer Semgrep, adapt accordingly.

  ### 5. Build Docker Images
  #   We'll tag them with $SHORT_SHA, so each commit has a unique tag.
  - name: 'gcr.io/cloud-builders/docker'
    id: 'Build docker-bot'
    args:
      [
        'build','-t','us-central1-docker.pkg.dev/$PROJECT_ID/genai-chatbot-repo/docker-bot:$SHORT_SHA',
        '-f','docker-bot/Dockerfile','docker-bot'
      ]

  - name: 'gcr.io/cloud-builders/docker'
    id: 'Build yt-whisper'
    args:
      [
        'build','-t','us-central1-docker.pkg.dev/$PROJECT_ID/genai-chatbot-repo/yt-whisper:$SHORT_SHA',
        '-f','yt-whisper/Dockerfile','yt-whisper'
      ]

  ### 6. Push Docker Images
  - name: 'gcr.io/cloud-builders/docker'
    id: 'Push docker-bot'
    args:
      [
        'push','us-central1-docker.pkg.dev/$PROJECT_ID/genai-chatbot-repo/docker-bot:$SHORT_SHA'
      ]

  - name: 'gcr.io/cloud-builders/docker'
    id: 'Push yt-whisper'
    args:
      [
        'push','us-central1-docker.pkg.dev/$PROJECT_ID/genai-chatbot-repo/yt-whisper:$SHORT_SHA'
      ]

  ### 7. Container Vulnerability Scan (Trivy)
  - name: 'docker.io/aquasec/trivy'
    id: 'Trivy scan docker-bot'
    args:
      [
        'image','--exit-code','1',
        'us-central1-docker.pkg.dev/$PROJECT_ID/genai-chatbot-repo/docker-bot:$SHORT_SHA'
      ]

  - name: 'docker.io/aquasec/trivy'
    id: 'Trivy scan yt-whisper'
    args:
      [
        'image','--exit-code','1',
        'us-central1-docker.pkg.dev/$PROJECT_ID/genai-chatbot-repo/yt-whisper:$SHORT_SHA'
      ]

  ### 8. Deploy to GKE
  # Option A: 'set image' commands to update existing Deployments 
  - name: 'gcr.io/cloud-builders/kubectl'
    id: 'Deploy docker-bot'
    env:
      - 'CLOUDSDK_COMPUTE_REGION=us-central1'
      - 'CLOUDSDK_CONTAINER_CLUSTER=genai-chatbot-cluster'
    args:
      [
        'set','image','deployment/chatbot-bot-deployment',
        'chatbot-bot=us-central1-docker.pkg.dev/$PROJECT_ID/genai-chatbot-repo/docker-bot:$SHORT_SHA'
      ]

  - name: 'gcr.io/cloud-builders/kubectl'
    id: 'Deploy yt-whisper'
    env:
      - 'CLOUDSDK_COMPUTE_REGION=us-central1'
      - 'CLOUDSDK_CONTAINER_CLUSTER=genai-chatbot-cluster'
    args:
      [
        'set','image','deployment/chatbot-whisper-deployment',
        'chatbot-whisper=us-central1-docker.pkg.dev/$PROJECT_ID/genai-chatbot-repo/yt-whisper:$SHORT_SHA'
      ]

  # Option B (Alternatively, you could do 'kubectl apply -f k8s/' if
  # your YAML references the image via a placeholder or you manually
  # update it. But for simplicity, we do 'set image' here.

  ### 9. Post-Deployment Smoke Test (Optional)
  - name: 'gcr.io/cloud-builders/kubectl'
    id: 'Smoke test'
    env:
      - 'CLOUDSDK_COMPUTE_REGION=us-central1'
      - 'CLOUDSDK_CONTAINER_CLUSTER=genai-chatbot-cluster'
    args:
      [
        'run','test-pod','--rm','-i','--restart=Never',
        '--image=appropriate/curl','--','curl','-f',
        'http://chatbot-bot-service.default.svc.cluster.local'
      ]
    # If your bot has a /health or /ping endpoint, adjust accordingly.
    # If the command fails, the pipeline fails.

images:
  - 'us-central1-docker.pkg.dev/$PROJECT_ID/genai-chatbot-repo/docker-bot:$SHORT_SHA'
  - 'us-central1-docker.pkg.dev/$PROJECT_ID/genai-chatbot-repo/yt-whisper:$SHORT_SHA'
